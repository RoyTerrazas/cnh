@{
    Layout = "_Site_Layout.cshtml";
    PageData["Title"] = "Nuevo / Edicion de usuarios";
    var Conn = Database.Open("Dashboard");

    var ConnSisas = Database.Open("Sisas");


    // script de seguridad
    string Nombre_pagina = Convert.ToString(Path.GetFileNameWithoutExtension(Request.Path));
    if (@Functions.SeguridadAccesoRecursos(Nombre_pagina) == false) { Response.Redirect("SinPermiso"); }
    // Inicializar variables de página generales
    string email = "", Label = "Nuevo";
    string password = "";
    string confirmPassword = "";
    string dependencia = "";
    string UltimoRegistro = "";
    bool DatosCompletos = false, OcultarBotones = false; ;
    string rol = "";
    bool MostrarVentana = false;
    string MensajeError = "";
    string nombre = "";
    string paterno = "";
    string materno = "";
    int TipoCuenta = 0;
    bool Mostrar = false;
    bool nuevo = true;
    string habilitado = "";
    string idd = "", cum = "", provincia = "";
    idd = Request.Form["idd"];
    habilitado = Request.Form["habilitado"];
    int ValorHabil = 0;
    if (habilitado == "on") { ValorHabil = 1; } else { ValorHabil = 0; }

    string fileSavePath1 = "";
    string newFileName = ""; ;

    var sqlText01n = "SELECT RoleId FROM webpages_UsersInRoles WHERE Userid=@0";
    var C01n = Conn.QuerySingle(sqlText01n, WebSecurity.CurrentUserId);
    if (C01n != null) { TipoCuenta = C01n.RoleId; }
    // Validación   https://docs.microsoft.com/en-us/aspnet/web-pages/overview/ui-layouts-and-themes/validating-user-input-in-aspnet-web-pages-sites

    if (Mostrar == true)
    {
        // Validation.Add("nombre", Validator.Integer("Los datos deben ser enteros"));
        // Validation.Add("paterno", Validator.Integer("Los datos deben ser enteros"));
        Validation.RequireField("nombre", "El nombre es obligatorio");
        Validation.RequireField("cum", "Se requiere de un CUM");
        Validation.RequireField("provincia", "Se requiere seleccionar la provincia.");
        Validation.RequireField("paterno", "El apellido paterno es obligatorio");
        Validation.RequireField("email", "Debe especificar una dirección de correo electrónico.");
        Validation.RequireField("rol", "Se debe especificar un rol");
        Validation.Add("confirmPassword", Validator.EqualsTo("password", "La nueva contraseña y la contraseña de confirmación no coinciden."));
        Validation.RequireField("confirmPassword", "La confirmación de la contraseña no puede estar en blanco.");
        Validation.RequireField("password", "La contraseña no puede estar en blanco.");
        Validation.Add("password", Validator.StringLength(maxLength: Int32.MaxValue, minLength: 6, errorMessage: "La contraseña debe tener al menos seis caracteres"));
    }
    DatosCompletos = Convert.ToBoolean(Request.Form["DatosCompletos"]);
    //----------------------------------------------------------------------------------------------------------------------------------
    if (Convert.ToBoolean(DatosCompletos) == true && idd == "")
    {
        if (Convert.ToBoolean(WebSecurity.UserExists(email)) == false)
        {
            if (email == null) { email = Request.Form["email"]; } else { email = Request.Form["email"].Trim(); }
            if (idd == "")
            {
                if (password == null) { password = Request.Form["password"]; } else { password = Request.Form["password"].Trim(); }
                if (confirmPassword == null) { confirmPassword = Request.Form["confirmPassword"]; } else { confirmPassword = Request.Form["confirmPassword"].Trim(); }
            }
            if (rol == null) { rol = Request.Form["rol"]; } else { rol = Request.Form["rol"].Trim(); }
            if (rol == "") { rol = "6"; }

            nombre = Request.Form["nombre"].Trim();
            paterno = Request.Form["paterno"].Trim();
            materno = Request.Form["materno"];
            cum = Request.Form["cum"].Trim();
            if (Request.Form["provincia"] == "") { provincia = "0"; } else { provincia = Request.Form["provincia"]; }







            if (Convert.ToBoolean(WebSecurity.UserExists(email)) == false)
            {//inserta

                //subir foto
                var uploadedFile = Request.Files["archivo1"];
                if (Path.GetFileName(uploadedFile.FileName) != "")
                {
                    newFileName = Guid.NewGuid().ToString() + "_" + Path.GetFileName(uploadedFile.FileName);
                    fileSavePath1 = Server.MapPath("~/WebCNH/img/" + newFileName);
                    uploadedFile.SaveAs(fileSavePath1);
                }
                else { newFileName = null; }


                WebSecurity.CreateUserAndAccount(email, password, null, false);
                var dbCommand = "SELECT TOP 1 UserId FROM UserProfile order by UserId desc";
                var row = Conn.QuerySingle(dbCommand);
                UltimoRegistro = Convert.ToString(row.UserId);
                if (UltimoRegistro != null)
                {
                    var updateCommand00 = "UPDATE UserProfile SET Nombre=@0, Paterno=@1, Materno=@2,habilitado=@3,foto=@4 WHERE UserId=@5";
                    Conn.Execute(updateCommand00, nombre, paterno, materno, ValorHabil, newFileName, UltimoRegistro);
                    var insertCommand02 = "INSERT webpages_UsersInRoles (UserId,RoleId) Values(@0, @1)";
                    Conn.Execute(insertCommand02, UltimoRegistro, rol);


                    var insertCommand03 = "INSERT TDatos (CUM,Id_CProvincias,Id_UserProfile,menu_desplegado) Values(@0, @1, @2, @3)";
                    Conn.Execute(insertCommand03, cum, provincia, UltimoRegistro, 0);


                    Response.Redirect("AdministracionCuentas?provincia=" + provincia + "&tipo_rol=" + rol);
                }
                else { MensajeError = "No se pudo establecer el identificador."; }
            }
            else
            {
                ModelState.AddFormError("Ese email (usuario) ya esta registrado, no se puede registrar de nuevo. ");
                MostrarVentana = true;
            }
        }
        else
        {
            ModelState.AddFormError("Ese email (usuario) ya esta registrado, no se puede registrar de nuevo. ");
            MostrarVentana = true;
        }
    }

    //edicion de datos-------------------precargado-----------------------------------------------------------------------------
    string NombCarg = "", PaternCarg = "", MatCarg = "", usuarioCarg = "", RolCarg = "", CUMCarg = "", ProvCarg = "", Id_Grupo_Regnal = "", foto = "";
    string num_grupo_Regnal = "", Nombre_Grupo_Regnal = "";
    bool habilCarg = false;
    int CantidadVotos = 0;
    string CantidadVotoss = "", grupo = "", IdTDatosleccion = "";
    var BUscar = "SELECT nombre,paterno,materno,email,habilitado,cum,id_cprovincias,Id_Grupo_Regnal,Nombre_Gpo_Regnal,Num_Gpo_Regnal,foto from VDatosCompletosUsuario where UserId=@0";
    var rowB = Conn.QuerySingle(BUscar, idd);
    if (rowB != null)
    {
        nuevo = false;
        Label = "Editar";
        NombCarg = rowB.nombre;
        PaternCarg = rowB.paterno;
        MatCarg = rowB.materno;
        usuarioCarg = rowB.email;
        habilCarg = rowB.habilitado;
        CUMCarg = rowB.cum;
        ProvCarg = Convert.ToString(rowB.id_cprovincias);
        Nombre_Grupo_Regnal = rowB.Nombre_Gpo_Regnal;
        num_grupo_Regnal = Convert.ToString(rowB.NUm_gpo_regnal);
        Id_Grupo_Regnal = Convert.ToString(rowB.Id_Grupo_Regnal);
        foto = rowB.foto;

    }

    var BUscar2 = "SELECT RoleId from webpages_UsersInRoles where UserId=@0";
    var rowB2 = Conn.QuerySingle(BUscar2, idd);
    if (rowB2 != null) { RolCarg = Convert.ToString(rowB2.RoleId); }

    //Rol Activo
    string RolActivo = "";
    var BUscar23 = "SELECT RoleId from webpages_UsersInRoles where UserId=@0";
    var rowB23 = Conn.QuerySingle(BUscar23, WebSecurity.CurrentUserId);
    if (rowB23 != null) { RolActivo = Convert.ToString(rowB23.RoleId); }

    //edicion------------------------------------------------------------------------------------------------------------------
    if (idd != "" && Request.Form["DatosCompletos"] == "true")
    {

        if (email == null) { email = Request.Form["email"]; } else { email = Request.Form["email"].Trim(); }
        if (rol == null) { rol = Request.Form["rol"]; } else { rol = Request.Form["rol"].Trim(); }
        if (rol == "") { rol = "3"; }
        nombre = Request.Form["nombre"];
        paterno = Request.Form["paterno"];
        materno = Request.Form["materno"];
        cum = Request.Form["cum"].Trim();
        if (Request.Form["provincia"] == "") { provincia = "0"; } else { provincia = Request.Form["provincia"]; }
        grupo = Request.Form["grupo"];
        CantidadVotoss = Request.Form["CantidadVotoss"];
        if (Request.Form["IdTDatosleccion"] == "") { IdTDatosleccion = "0"; } else { IdTDatosleccion = Request.Form["IdTDatosleccion"]; }

        //checar el nuevo nombre del grupi y actualizarlo
        string GrupoCargado = "";



        var sqlText3 = "select * from [dbo].[VistaConsultaMiembros] where cum=@0";
        var C3 = ConnSisas.QuerySingle(sqlText3, cum); // ojo para que sea solo uno es query single
        if (C3 != null) { GrupoCargado = Convert.ToString(C3.NumeroGrupo); }


        //subir foto
        var uploadedFile = Request.Files["archivo1"];
        if (Path.GetFileName(uploadedFile.FileName) != "")
        {
            newFileName = Guid.NewGuid().ToString() + "_" + Path.GetFileName(uploadedFile.FileName);
            fileSavePath1 = Server.MapPath("~/WebCNH/img/" + newFileName);
            uploadedFile.SaveAs(fileSavePath1);
        }
        else { newFileName = null; }


        if (rol == "6")
        {//grupo



            var updateCommand001 = "UPDATE UserProfile SET Nombre=@0, Paterno=@1, Materno=@2,habilitado=@3,email=@4,foto=@5 WHERE UserId=@6";





            Conn.Execute(updateCommand001, nombre, paterno, materno, ValorHabil, email, newFileName, idd);

            var updateCommand002 = "UPDATE webpages_UsersInRoles SET RoleId=@0 WHERE UserId=@1";
            Conn.Execute(updateCommand002, rol, idd);
            var insertCommand03 = "UPDATE TDatos set CUM=@0,Id_CProvincias=@1,Id_Grupo_Regnal=@2,Nombre_Gpo_Regnal=@3 where Id_UserProfile=@4";
            Conn.Execute(insertCommand03, cum, provincia, grupo, GrupoCargado, idd);
            var insertCommand04 = "UPDATE TCantidadVotosPorGrupos_Elecc set CantidadVotos=@0 where Id_GrupoRegnal=@1";
            Conn.Execute(insertCommand04, CantidadVotoss, grupo);
            MostrarVentana = true;
            Response.Redirect("AdministracionCuentas?provincia=" + provincia + "&tipo_rol=" + rol);
        }
        else
        {//asociado y adm
            var updateCommand001 = "UPDATE UserProfile SET Nombre=@0, Paterno=@1, Materno=@2,habilitado=@3,email=@4,foto=@5 WHERE UserId=@6";
                Conn.Execute(updateCommand001, nombre, paterno, materno, ValorHabil, email, newFileName, idd);

            var updateCommand002 = "UPDATE webpages_UsersInRoles SET RoleId=@0 WHERE UserId=@1";
            Conn.Execute(updateCommand002, rol, idd);

            var insertCommand03 = "UPDATE TDatos set CUM=@0,Id_CProvincias=@1,Id_Grupo_Regnal=@2 where Id_UserProfile=@3";
            Conn.Execute(insertCommand03, cum, provincia, grupo, idd);

            MostrarVentana = true;
            Response.Redirect("AdministracionCuentas?provincia=" + provincia + "&tipo_rol=" + rol);
        }
    }
}


<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Administración de usuarios
            <small>
                Cuentas de usuarios por dependencias:
                <strong>  @Html.Raw(dependencia)   </strong>
            </small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="Inicio" title="Inicio"><i class="fa fa-dashboard"></i>Inicio</a></li>
            <li><a href="AdministracionCuentas" title="Administración de cuentas"><i class="fa  fa-user"></i> Administración de cuentas</a></li>
            <li><a href="#" title="Nuevo usuario"><i class="fa  fa-user-plus"></i> @Label usuario</a></li>
        </ol>
    </section>
    <form method="post" name="forma1" enctype="multipart/form-data">
        <input type="hidden" name="Nombre_Grupo_Regnall" value="@Nombre_Grupo_Regnal" />
        <section class="content">
            <div class="row">

                <div class="col-md-12">
                    @{
                        if (MostrarVentana == true)
                        {
                            <div class="alert alert-warning alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                <h4><i class="icon fa fa-warning"></i> Alerta!</h4>
                                @Html.ValidationSummary("No se creó la cuenta. Corrija los errores e inténtelo de nuevo.", excludeFieldErrors: true, htmlAttributes: null)
                            </div>
                        }
                        if (MensajeError != "")
                        {
                            <div class="alert alert-warning alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                <h4><i class="icon fa fa-warning"></i> Alerta!</h4>
                                @Html.Raw(MensajeError)
                            </div>
                        }
                    }
                    <input type="hidden" name="Mostrar" value="true" />
                    <input type="hidden" name="idd" value="@idd" />
                    <div class="box ">
                        <div class="box-header ">  <i class="fa fa-user-plus"></i> <strong>@Label usuario</strong>   </div>
                        <div class="box-body">
                            @{
                                <input type="hidden" name="DatosCompletos" value="true" />
                                <div class="row">

                                    <!--nombre-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="Nombre">Nombre: </label>
                                            <input type="text" maxlength="250" class="form-control" name="nombre" value="@NombCarg" id="nombre" placeholder="Nombre">

                                        </div>
                                    </div>

                                    <!--paterno-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="Paterno">Paterno:</label>
                                            <input type="text" maxlength="250" class="form-control" name="paterno" value="@PaternCarg" id="paterno" placeholder="Paterno">
                                        </div>
                                    </div>

                                    <!--materno-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="Paterno">Materno:</label>
                                            <input type="text" maxlength="250" class="form-control" name="materno" value="@MatCarg" id="materno" placeholder="Materno">
                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <!--usuario-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">*Usuario (Email):</label>
                                            <input type="text" maxlength="250" required class="form-control" name="email" id="email" value="@usuarioCarg" placeholder="Email">
                                            <font color="red"><small> @Html.ValidationMessage("email")</small></font>
                                        </div>
                                    </div>

                                    <!--Rol-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="Rol">*Rol: </label>
                                            @{
                                                var selectQueryString2 = "";
                                                if (RolActivo == "1")
                                                {// para que los sadmin puedan dar de alta sadmin y admin aqui.
                                                    if (nuevo == false)
                                                    {
                                                        selectQueryString2 = "SELECT RoleId,RoleName FROM webpages_Roles  order by Roleid";

                                                    }
                                                    else
                                                    {
                                                        selectQueryString2 = "SELECT RoleId,RoleName FROM webpages_Roles where  Roleid<>1  order by Roleid";
                                                    }

                                                }
                                                else
                                                {// los adminn no pueden dar de alta a sadmin y admin aqui
                                                    if (nuevo == false)
                                                    {
                                                        selectQueryString2 = "SELECT RoleId,RoleName FROM webpages_Roles  where Roleid<>1   and Roleid<>6 order by Roleid";
                                                    }
                                                    else
                                                    {
                                                        selectQueryString2 = "SELECT RoleId,RoleName FROM webpages_Roles  where Roleid<>1 and Roleid<>6 order by Roleid";
                                                    }


                                                }
                                            }
                                            <select id="rol" name="rol" required class="form-control  select">
                                                <option value="">Seleccione</option>
                                                @foreach (var row2 in Conn.Query(selectQueryString2))
                                                {
                                                    <option value="@row2.RoleId" @if (Convert.ToString(row2.RoleId) == RolCarg) { @Html.Raw("selected") }>@row2.RoleName.ToUpper()</option>
                                                }
                                            </select>
                                            <font color="red"><small>@Html.ValidationMessage("rol")</small></font>
                                        </div>
                                    </div>

                                    <!--acceder al sistema-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="habilitado">*¿Puede acceder al sistema?:</label>
                                            <div class="checkbox">
                                                <label>
                                                    @if (idd != null)
                                                    {//editar
                                                        if (habilCarg == true)
                                                        {<input type="checkbox" name="habilitado" checked>}
                                                        else
                                                        {<input type="checkbox" name="habilitado"> }
                                                    }
                                                    else
                                                    {//nuevo
                                                        <input type="checkbox" name="habilitado" checked>
                                                    }
                                                </label>
                                            </div>

                                        </div>
                                    </div>

                                </div>


                                <div class="row">
                                    <!--cum-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">CUM:</label>
                                            <input type="text" maxlength="10" class="form-control" name="cum" id="cum" value="@CUMCarg" placeholder="CUM">
                                            <font color="red"><small> @Html.ValidationMessage("cum")</small></font>
                                        </div>
                                    </div>

                                    <!--provincia-->
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">*Provincia:</label>
                                            @{ var selectQueryString = "SELECT Nombre_provincia,Id_Provincias FROM CProvincias  where Hablitado=0  order by nombre_provincia"; }
                                            <select id="provincia" required name="provincia" class="form-control select" onchange="from(document.forma1.provincia.value, 'midiv', 'Ajax_provincia_grupo.cshtml')">
                                                <option value="">Seleccione</option>
                                                @foreach (var row in Conn.Query(selectQueryString))
                                                {
                                                    <option value="@row.Id_Provincias" @if (Convert.ToString(row.Id_Provincias) == ProvCarg) { @Html.Raw("selected") ; }>  @row.Nombre_provincia.ToUpper()  </option>
                                                }
                                            </select>
                                            <font color="red"><small> @Html.ValidationMessage("provincia")</small></font>
                                        </div>
                                    </div>


                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">*Foto <font color="blue">@foto</font></label>
                                            <input type="file" id="archivo1" name="archivo1" accept="application/jpg" max="300" maxlength="300"  />
                                            <span class="btn1">Seleccione</span>
                                        </div>
                                    </div>

                                    <!--grupo-->
                                    @if (RolCarg == "6")
                                    {
                                        <div class="col-xs-4">
                                            <div class="form-group">
                                                <label for="exampleInputEmail1">*Grupo: <small>(Del Sisas)</small></label>
                                                <div id="midiv">
                                                    @{ var selectQueryStringg = "select * from grupo where baja=0 and idprovincia=@0 and grupo_num<>0 and grupo_num<>900 order by nombre"; }
                                                    <select id="grupo" required name="grupo" class="form-control  select">
                                                        <option value="">Seleccione</option>
                                                        @foreach (var rowg in ConnSisas.Query(selectQueryStringg, ProvCarg))
                                                        {
                                                            <option value="@rowg.idgrupo" @if (Convert.ToString(rowg.idgrupo) == Id_Grupo_Regnal) { @Html.Raw("selected") ; }>  @rowg.nombre.ToUpper() (G @rowg.grupo_num) </option>
                                                        }
                                                    </select>
                                                </div>

                                            </div>
                                        </div>
                                    }
                                    else
                                    { <input type="hidden" name="grupo" value="1" />}

                                </div>

                                <!--solo para el caso de jefes de grupo-->
                                <div class="row">

                                    <!--votos por grupo-->
                                    @if (RolCarg == "6")
                                    {
                                        <div class="col-xs-4">
                                            <div class="form-group">
                                                <label for="exampleInputEmail1">*Votos por Grupo:</label>
                                                <input type="number" maxlength="2" required class="form-control" name="CantidadVotoss" id="CantidadVotoss" value="@CantidadVotos" placeholder="Num Votos" min="0" step="1" max="15">

                                            </div>
                                        </div>
                                    }
                                    else
                                    {<input type="hidden" name="CantidadVotoss" value="0" />}

                                    @if (RolCarg == "6")
                                    {
                                        <div class="col-xs-8">  <div class="form-group">   <label for="exampleInputEmail1"></label>  </div>    </div>
                                    }
                                </div>

                                if (idd == null)
                                {
                                    <div class="row">
                                        <div class="col-xs-6">
                                            <div class="form-group">
                                                <label for="Contrasena">*Contraseña </label>
                                                <input type="password" required maxlength="128" class="form-control" name="password" id="password" placeholder="Contraseña">
                                                <font color="red"><small>@Html.ValidationMessage("password")</small></font>
                                            </div>
                                        </div>
                                        <div class="col-xs-6">
                                            <div class="form-group">
                                                <label for="Confirmar">*Confirmar contraseña</label>
                                                <input type="password" required maxlength="128" class="form-control" name="confirmPassword" id="confirmPassword" placeholder="Confirmar contraseña">
                                                <font color="red"><small>@Html.ValidationMessage("confirmPassword")</small></font>
                                            </div>
                                        </div>
                                    </div>
                                }

                            }                <div class="box-footer">
                                <div class="col-xs-9">
                                    <div class="text-left">
                                        @if (RolCarg == "6")
                                        {@Html.Raw("Se debe especificar la cantidad de votos por grupo dependiendo de su membresía");
                                    }
                                </div>
                            </div>
                            <div class="col-xs-3">
                                <div class="text-right">
                                    <input type="button" id="Cancelar" class="btn" value="Cancelar" title="Cancelar" onClick="location.href = 'AdministracionCuentas?provincia=@ProvCarg&tipo_rol=@RolCarg'">
                                    @if (OcultarBotones == false)
                                    {<button type="submit" class="btn bg-purple" title="Nuevo">@Label</button>}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>
</div>

@{
    Conn.Close();
    Conn.Dispose();

    ConnSisas.Close();
    ConnSisas.Dispose();
}




